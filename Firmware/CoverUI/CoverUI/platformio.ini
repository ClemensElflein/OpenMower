; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .

[env]
platform = raspberrypi
board = pico
;framework = arduino

;build_src_filter =
;  +<*>
;  -<yfc500/>

;build_flags = -Wno-deprecated-declarations -Wno-ignored-qualifiers
;lib_deps =
;    tinkerspy/Automaton@^1.0.3

[env:om]
; Todo or not required as OM's UI get compiled not within PIO


; Original YardForce Classic 500 "RM-ECOW-V1.3.0, 2020.05.08" CoverUI PCB
[env:yfc500_picoprobe]
platform = ststm32
board = nucleo_f030r8
framework = stm32cube

build_src_filter =
  ${env.build_src_filter}
  -<LEDcontrol.cpp>
  +<yfc500/*>
  
build_flags = ${env.build_flags} -DHW_YFC500

; Need at least openocd 0.11 for working CMSIS-DAP adapter detection
platform_packages = platformio/tool-openocd@^2.1100.211028

; Picoprobe (RP2040) = CMSIS-DAP
upload_protocol = cmsis-dap
upload_flags =
  -f
  interface/cmsis-dap.cfg
  -c
  adapter speed 20000; transport select swd;
  -f
  target/stm32f0x.cfg

upload_command = openocd $UPLOAD_FLAGS -c "init; reset halt; stm32f0x unlock 0; reset run" -c "program {$SOURCE} verify reset; shutdown;"


[env:yfc500_picoprobe-debug]
platform = ststm32
board = nucleo_f030r8
framework = stm32cube

build_src_filter =
  ${env.build_src_filter}
  -<LEDcontrol.cpp>
  +<yfc500/*>
  ; Use Semihosting's syscall instead of ours
  -<yfc500/stm32cube/syscalls.c>

build_flags = ${env.build_flags} -DHW_YFC500

; Semihosting see https://piolabs.com/blog/insights/debugging-semihosting.html
build_unflags =
  --specs=nosys.specs 
  -lnosys
extra_scripts = util/semihosting.py

; Need at least openocd 0.11 for working CMSIS-DAP adapter detection
platform_packages = platformio/tool-openocd@^2.1100.211028

; Picoprobe (RP2040) = CMSIS-DAP
upload_protocol = cmsis-dap
upload_flags =
  -f
  interface/cmsis-dap.cfg
  -c
  adapter speed 20000; transport select swd;
  -f
  target/stm32f0x.cfg

upload_command = openocd $UPLOAD_FLAGS -c "init; reset halt; stm32f0x unlock 0; reset run" -c "program {$SOURCE} verify reset; shutdown;"

; Picoprobe (RP2040) = CMSIS-DAP
debug_tool = cmsis-dap
;debug_init_break = 
debug_build_flags = -Og -g3 -ggdb2 -DDEBUG_SEMIHOSTING
debug_extra_cmds =
  monitor arm semihosting enable
  monitor arm semihosting_fileio enable
debug_server = 
  openocd
  -f
  interface/cmsis-dap.cfg
  -c
  adapter speed 20000; transport select swd;
  -f
  target/stm32f0x.cfg
  -c
  reset_config none separate
